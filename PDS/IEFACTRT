IEFACTRT TITLE 'STEP TERMINATION EXIT ROUTINE'
*---------------------------------------------------------------------*
* Function
*
* IEFACTRT provides Step and Job Statistic Messages that are written
* to the JES2 Job log via a WTO and also to the JESYSMSG dataset by
* invoking IEFYS.
*
* This exit is coded to use the type 30 records and associated
* subtypes to get information for the step termination messages.
* On entry Register 0 contains an indicator to which record type
* the exit has been passed. an value of 20 (x'1E') in R0 indicates
* a type 30 SMF record has been passed to this exit. The record
* subtypes available for type 30 records are :
*
* subtype 01 : Job start
* subtype 02 : Interval
* subtype 03 : Step termination
* subtype 04 : Step total
* subtype 05 : Job termination
* subtype 06 : System address space
*
* The exit processes the subtypes 4 and 5 to produce the messages.
*
*---------------------------------------------------------------------*
* Attributes
*
* AMODE(31)
* RMODE(ANY)
* RENT
* REUS
* AC(0)
*
*---------------------------------------------------------------------*
* IBM Macros
*
* GETMAIN, TIME, FREEMAIN, WTO, IFASMFR
*
*---------------------------------------------------------------------*
* Register Usage
*
* R1    - Parameter List
* R2    - SMF Record Base Address
* R3    - SMF Record SECTION
* R4    - Message to be written (WTO)
* R5    - CEPA
* R6    - Work Register
* R7    - Work Register
* R8    - Branch and Link
* R9    - Message to be written (IEFYS)
* R10   - Entry reason code
* R11   - Base Register
* R12   - Used by IEFYS
* R13   - Workarea
*
*---------------------------------------------------------------------*
* Changes
*
* 17/02/1991  Rob Scott    Code written
* 22/06/2000  Rob Scott    Added storage values and changed IEFYS
*                          messages to 80-bytes
* 20/06/2001  Rob Scott    Cater for increased EXCP section length
*                          in OS/390 R10+
*---------------------------------------------------------------------*
IEFACTRT CSECT
IEFACTRT AMODE 31
IEFACTRT RMODE ANY
         BAKR  R14,R0                   Linkage stack
         LR    R11,R15                  Get entry point
         USING IEFACTRT,R11             Establish base reg
         LR    R10,R0                   Save reason code
         LR    R5,R1                    Save parameter list address
         USING PARMLIST,R5              Address it
         C     R10,=F'20'               SMF type30 record ?
         BNE   RETURN00                 No - quick exit
         B     SUBTYPES                 Yes - check subtypes
RETURN00 EQU   *                        Ho back rc=0
         XR    R15,R15                  Zero R15
         PR
*
SUBTYPES EQU   *
*---------------------------------------------------------------------*
*  Check sub-system for batch and STC only
*---------------------------------------------------------------------*
         L     R2,SUBSYS                Get the sub-system address
         CLC   0(4,R2),=C'STC '         Is it STC ?
         BE    VALID                    Yes - valid
         CLC   0(4,R2),=C'JES2'         Is it batch ?
         BE    VALID                    Yes - valid
         B     RETURN00                 No - quick exit
VALID    EQU   *
*---------------------------------------------------------------------*
*  Check SMF30 sub-type records
*---------------------------------------------------------------------*
         L     R2,SMFRDW                Get addr SMF record type 30
         USING SMFRCD30,R2              Address it
         CLI   SMF30UON+1,K1            Is it a continuation record ?
         BL    RETURN00                 Yes - quick exit
         CLC   SMF30STP(2),=X'0004'     Is it step termination subtype?
         BE    STEPTERM                 Yes - process it
         CLC   SMF30STP(2),=X'0005'     Is it job termination subtype ?
         BE    JOBTERM                  Yes - process it
         B     RETURN00                 Otherwise exit
*
STEPTERM EQU   *                        SMF type 30-4
*---------------------------------------------------------------------*
*  Process SMF30-4 records to produce WTO and IEFYS messages
*
*  First task is to produce to WTO message. During the processing to
*  capture the values for this message, we save away things like the
*  program and stepname so that we can write the IEFYS messages
*  later without having to re-establish addressability to the
*  various DSECTs within the record.
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30IOF              Get id section
         USING SMF30ID,R3               Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
GETWORKA EQU   *
         GETMAIN R,LV=WORKEND           Get storage for workarea
         LR    R13,R1                   Store address in R13
         MVC   4(4,R13),=C'F1SA'        Set label in savearea
         USING WORKAREA,R13             Address workarea
         LA    R4,MSGAREA               Point to WTO msgarea
         USING MSG,R4                   Address it
         LA    R9,YSGAREA               Point to IEFYS msg area
         USING FYS,R9                   Address it
         XR    R15,R15                  Zero R15
         LA    R15,MSGTLEN(R15)         Get msg text length
         STH   R15,MSGWTOL              Store WTO msg length
         MVC   WTO1(L#WTO),WTOM         Move in WTO model
         MVC   MSGTEXT(MSGTLEN),LABEL1  Move in first label text
         L     R1,CANBIT                Load up step count/cancel
         CLI   1(R1),X'01'              First step ?
         BNE   YSLABEL1                 No - do not issue WTO
         BAL   R8,WTOMSG                Issue WTO
YSLABEL1 EQU   *
         MVC   MSGTEXT(MSGTLEN),LABEL2  Move in second label text
         L     R1,CANBIT                Load up step count/cancel
         CLI   1(R1),X'01'              First step ?
         BNE   GETPROC                  No - do not issue WTO
         BAL   R8,WTOMSG                Issue WTO
GETPROC  EQU   *
*---------------------------------------------------------------------*
* Capture Stepname, ProcStepName and Program from the ID section
*---------------------------------------------------------------------*
         MVC   MSGTEXT(MSGTLEN),BLANKS  Move in blank line
         MVC   MSGID(8),=CL8'HTRT03I'
         CLC   SMF30PSN(8),BLANKS       Is it blanks ?
         BE    NOPROC                   Yes - not expanded proc
         MVC   MSGSTEP(8),SMF30PSN      Move in stepname
         MVC   MSGPROC(8),SMF30STM      Move in procstep
         B     GETPGM                   Carry on
NOPROC   EQU   *
         MVC   MSGSTEP(8),SMF30STM      Move in step name
GETPGM   EQU   *
         MVC   PGMNAME(8),SMF30PGM      Move in pgm name
         MVC   MSGJOBN(8),SMF30JBN      Move in job name
         MVC   SAVEPGM(8),PGMNAME       Remember for later
         MVC   SAVESTEP(8),MSGSTEP
         MVC   SAVEPROC(8),MSGPROC
GETELAP  EQU   *
*---------------------------------------------------------------------*
* Calculate elapsed time.
* The outut field only goes up to 99 hours, so if the time is over
* this limit we throw out a '>4 days' message.
*---------------------------------------------------------------------*
         TIME  BIN                      Get the current time
         LR    R7,R0                    Store current time
         B     MANYDAYS                 How many days ?
BADDAYS  EQU   *
         XR    R7,R7                    Clear so that we ..
         B     ELAPCONV                 Force 00:00:00.00 (error)
*
MANYDAYS EQU   *
         XC    DWORK,DWORK              Clear
         ST    R1,DWORK+4               Save date (0cyydddf)
         CLC   DWORK+5(1),SMF30STD+1    Same year ?
         BNE   BADDAYS                  no - force error
         CLC   DWORK+6(2),SMF30STD+2    Same day ?
         BE    SAMEDAY                  yes - no adjust
         SP    DWORK,SMF30STD           How many days
         BM    BADDAYS                  error
         CVB   R6,DWORK                 convert to binary
         C     R6,=F'4'                 more than 4 days ?
         BNH   DAYADJST                 no -
         MVC   MSGELAP(11),=CL11'>4 Days'
         B     ELAPDONE
DAYADJST EQU   *
         LR    R1,R6                    Copy number of days
         XR    R0,R0                    Clear
         M     R0,ONEDAY
         ALR   R7,R1                    Add on 24 hours
SAMEDAY  EQU   *
         S     R7,SMF30SIT              Take away step init time
ELAPCONV EQU   *
         LA    R1,MSGELAP               Point to elapsed section
         BAL   R8,TIMECONV              Format it
ELAPDONE EQU   *
         MVC   SAVEELA(11),MSGELAP      Remeber for later
*---------------------------------------------------------------------*
* Capture return code from the completion section
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30TOF              Add offset to comp section
         USING SMF30CMP,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         TM    SMF30STI,SMF30FLH        Was step flushed ?
         BNO   NOTFLUSH                 No - carry on
         MVC   MSGRC(5),FLUSH           Move in flush message
         B     CPUTIME                  Get CPU time
NOTFLUSH EQU   *
         TM    SMF30STI,SMF30ABD        Has it abended ?
         BNO   CONVERT                  No - normal completion
         CLC   SMF30SCC,=X'7FFF'        Is it system code ?
         BH    CONVERT                  No - user abend
         LA    R15,UWORK                Point to output
         LA    R1,SMF30SCC              Point to comp code
         LA    R0,2                     Set length of input
         BAL   R8,HEX2CHAR              make it printable
         MVC   MSGRC(2),=C' S'          Move system code indicator
         MVC   MSGRC+2(3),UWORK+1       Move in the code
         B     CPUTIME                  Go and get CPU time
CONVERT  EQU   *
         LA    R7,0                     Clear out r7
         LH    R7,SMF30SCC              Load up cond code
         N     R7,=X'00000FFF'          Get rid of indicator
         CVD   R7,PWORK                 Convert to decimal
         MVC   CWORK(8),CCMASK          Move in the mask
         TM    SMF30STI,SMF30ABD        was it abend ?
         BNO   CONVRTCC                 no - just normal rc
CONVRTUB EQU   *
         MVC   CWORK(8),UBMASK          Move in the mask
         ED    CWORK(8),PWORK+4         Edit cond code
         MVC   MSGRC(5),CWORK+3         move in the cond code
         MVI   MSGRC,C'U'               add a U for User abend
         B     CPUTIME
CONVRTCC EQU   *
         ED    CWORK(8),PWORK+4         Edit cond code
         MVC   MSGRC(5),CWORK+3         move in the cond code
CPUTIME  EQU   *
         MVC   SAVERC(5),MSGRC          Remember for later
*---------------------------------------------------------------------*
* Capture CPU times from the processor section
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30COF              Set to processor section
         USING SMF30CAS,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         L     R7,SMF30CPT              Load up CPU time (TCB)
         LA    R1,MSGTCB                Point to WTO TCB time
         BAL   R8,TIMECONV              Format it
         MVC   SAVETCB(11),MSGTCB       Remember for later
         L     R7,SMF30CPS              Load SRB time
         LA    R1,MSGSRB                Point to WTO SRB time
         BAL   R8,TIMECONV              Format it
         MVC   SAVESRB(11),MSGSRB       Remember for later
         L     R7,SMF30CPT              Load up CPU time (TCB)
         A     R7,SMF30CPS              Add  SRB time
         LA    R1,MSGCPU                Point to total CPU
         BAL   R8,TIMECONV              Format it
         MVC   SAVETOT(11),MSGCPU       Remember for later
PERFORM  EQU   *
*---------------------------------------------------------------------*
* Capture Service Units from the performance section
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30POF              Set to performance section
         USING SMF30PRF,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         LA    R7,0                     Zero R7
         LA    R15,MSGSERV              Point to serv
         L     R7,SMF30CSU              Load up serv units
         C     R7,MAXNUM                Check for maximum number
         BL    NORMSTEP                 Normal step
         BCTR  R15,R0                   Minus one
         LA    R6,0                     Zero R6
         D     R6,=F'1000'              Divide by 1000
         MVI   MSGSERV+7,C'K'           Move in a K
NORMSTEP EQU   *
         CVD   R7,EXPWKA                Convert to dec
         MVC   0(8,R15),BIGMASK         Move in edit mask to line
         ED    0(8,R15),EXPWKA+4        Edit the service units
         MVC   SAVESERV(8),MSGSERV      Remember for later
IOSECT   EQU   *
*---------------------------------------------------------------------*
* Capture I/O counts from the I/O section
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30UOF              Set to I/O  section
         USING SMF30URA,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         MVC   ALLIOS(8),=D'0'          Blank out I/O fields
         LA    R7,0                     Clear R7
         LA    R15,MSGEXCP              Point to I/O area
         L     R7,SMF30TEP              Load up r7 with # of excp recs
         ST    R7,ALLIOS                Store total I/O count
         C     R7,MAXNUM                Bigger than maximum
         BL    NORMIO                   Normal I/O
         BCTR  R15,R0                   Minus one
         LA    R6,0                     Zero R6
         D     R6,=F'1000'              Divide by 1000
         MVI   MSGEXCP+5,C'K'           Move in a k
NORMIO   EQU   *
         CVD   R7,EXPWKA                Convert to dec
         MVC   0(6,R15),GENMASK         Move in edit mask to line
         ED    0(6,R15),EXPWKA+5        Edit the I/O  count
         MVC   SAVEIO(6),MSGEXCP        Remember for later
         BAL   R8,WTOMSG                Issue WTO
*
STEPYS   EQU   *
*---------------------------------------------------------------------*
* We have issued the WTO to throw out the summary message to the job
* log, so now we produce more detailed messages to the JESYSMSG using
* IEFYS.
*---------------------------------------------------------------------*
         MVC   FYSMSGID(8),=CL8'HTRT05I'
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVC   FYSCOL1+1(FYSLEN-1),FYSCOL1
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(LCOMPANY),COMPANY
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Program Name'
         MVC   FYSFLD1(8),SAVEPGM
         MVC   FYSTIM2(11),=CL11'hh:mm:ss.th'
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Step Name   '
         MVC   FYSFLD1(8),SAVESTEP
         MVC   FYSLAB2(16),=CL16'Elapsed Time'
         MVC   FYSTIM2(11),SAVEELA
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Procedure Step'
         MVC   FYSFLD1(8),SAVEPROC
         MVC   FYSLAB2(16),=CL16'TCB CPU Time  '
         MVC   FYSTIM2(11),SAVETCB
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Return Code'
         MVC   FYSFLD1+3(5),SAVERC
         MVC   FYSLAB2(16),=CL16'SRB CPU Time '
         MVC   FYSTIM2(11),SAVESRB
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Total I/O'
         MVC   FYSFLD1+2(6),SAVEIO
         MVC   FYSLAB2(16),=CL16'Total CPU Time  '
         MVC   FYSTIM2(11),SAVETOT
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Service Units'
         MVC   FYSFLD1(8),SAVESERV
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         BAL   R8,WRITEMSG              Write to JESYSMSG
STORSECT EQU   *
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30ROF              Set to I/O  section
         USING SMF30RSV,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Region Size'
         ICM   R6,B'1111',SMF30RGN      Get value
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD1(7),CWORK+1       Copy in value
         MVI   FYSFLD1+7,C'K'           Add a 'K'
         MVC   FYSLAB2(16),=CL16'Pages Paged '
         ICM   R6,B'1111',SMF30PGI      Get value
         AL    R6,SMF30PGO              Get value
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD2(8),CWORK         Copy in value
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Data/Hiperspace'
         ICM   R6,B'1111',SMF30DSV      Get value
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD1(7),CWORK+1       Copy in value
         MVI   FYSFLD1+7,C'M'           Add a 'K'
         MVC   FYSLAB2(16),=CL16'Pages Swapped'
         ICM   R6,B'1111',SMF30PSI      Get value
         AL    R6,SMF30PSO              Get value
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD2(8),CWORK         Copy in value
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'ASID Swaps'
         ICM   R6,B'1111',SMF30NSW      Get value
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD1(8),CWORK         Copy in value
         MVC   FYSLAB2(16),=CL16'Pages Stolen'
         ICM   R6,B'1111',SMF30PST      Get value
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD2(8),CWORK         Copy in value
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB2(16),=CL16'VIO (In and Out)'
         ICM   R6,B'1111',SMF30VPI      Get value
         AL    R6,SMF30VPO
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD2(8),CWORK         Copy in value
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(27),=CL27'--------Below 16Meg--------'
         MVC   FYSLAB2(27),=CL27'--------Above 16Meg--------'
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Private Area'
         ICM   R6,B'1111',SMF30RGB      Get value
         SRL   R6,10                    divide by 1024 = K
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD1(7),CWORK+1       Copy in value
         MVI   FYSFLD1+7,C'K'           Add a 'K'
         MVC   FYSLAB2(16),=CL16'Private Area'
         ICM   R6,B'1111',SMF30ERG      Get value
         SRL   R6,10                    divide by 1024 = K
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD2(7),CWORK+1       Copy in value
         MVI   FYSFLD2+7,C'K'           Add a 'K'
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'Max Allocated'
         ICM   R6,B'1111',SMF30URB      Get value
         SRL   R6,10                    divide by 1024 = K
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD1(7),CWORK+1       Copy in value
         MVI   FYSFLD1+7,C'K'           Add a 'K'
         MVC   FYSLAB2(16),=CL16'Max Allocated'
         ICM   R6,B'1111',SMF30EUR      Get value
         SRL   R6,10                    divide by 1024 = K
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD2(7),CWORK+1       Copy in value
         MVI   FYSFLD2+7,C'K'           Add a 'K'
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'LSQA And SWA '
         ICM   R6,B'1111',SMF30ARB      Get value
         SRL   R6,10                    divide by 1024 = K
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD1(7),CWORK+1       Copy in value
         MVI   FYSFLD1+7,C'K'           Add a 'K'
         MVC   FYSLAB2(16),=CL16'LSQA And SWA '
         ICM   R6,B'1111',SMF30EAR      Get value
         SRL   R6,10                    divide by 1024 = K
         CVD   R6,EXPWKA                Convert to decimal
         MVC   CWORK(8),BIGMASK         Copy mask
         ED    CWORK(8),EXPWKA+4        Make printable
         MVC   FYSFLD2(7),CWORK+1       Copy in value
         MVI   FYSFLD2+7,C'K'           Add a 'K'
         BAL   R8,WRITEMSG              Write to JESYSMSG
DDSECTS  EQU   *
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         BAL   R8,WRITEMSG              Write to JESYSMSG
EXCP     EQU   *
*---------------------------------------------------------------------*
* Capture individual I/Os per DD Name from the EXCP section
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30EOF              Set to excp section
         USING SMF30EXP,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         LA    R7,0                     Clear R7
         LH    R7,SMF30EON              Load up r7 with # of excp recs
         LTR   R7,R7                    Are there any ?
         BZ    DONE                     No - then ignore
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         MVC   FYSLAB1(16),=CL16'DDName    Unit'
         MVC   FYSTIM1(19),=CL19'  Blksize       I/O'
         BAL   R8,WRITEMSG              Write to JESYSMSG
EXCPLOOP EQU   *
*---------------------------------------------------------------------*
* Loop thru the entries in the EXCP section to extract the I/O count
* for each DD Name:
* o  DD Names with 0 I/Os will not be reported.
* o  Only DD Names that reside on DASD, TAPE or VIO will be reported
*---------------------------------------------------------------------*
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         CLC   SMF30CUA,VIO             Is it VIO ?
         BNE   CUACHECK                 No - go and check if unit type
         MVC   FYSLAB1+10(4),VIOMSG     Move 'VIO' to msg line
         B     EXCPCNT
CUACHECK EQU   *
         CLI   SMF30DEV,X'20'           Is it DASD ?
         BE    CUATRANS                 Yes - get CUA
         CLI   SMF30DEV,X'80'           Is it TAPE ?
         BE    CUATRANS                 Yes - get CUA
         B     NEXTREC                  Not interested in this one
CUATRANS EQU   *
         LA    R15,UWORK                Point to output area
         LA    R1,SMF30CUA              Point to CUA
         LA    R0,2                     Set length of input
         BAL   R8,HEX2CHAR              Make printable
         MVC   FYSLAB1+10(4),UWORK      Move CUA to msg line
EXCPCNT  EQU   *
         LA    R6,0                     Zero R6
         L     R6,SMF30BLK              Load up excp counts
         LTR   R6,R6                    Is it zero ?
         BZ    NEXTREC                  Yes - don't print it
         L     R15,IOACCUM              Load up I/O accumaleted
         A     R15,SMF30BLK             Add the current I/O
         ST    R15,IOACCUM              Store it back
         CVD   R6,EXPWKA                Convert to dec
         MVC   FYSTIM1+11(8),BIGMASK       Move in edit mask to line
         ED    FYSTIM1+11(8),EXPWKA+4      Edit the excp count
         MVC   FYSLAB1(8),SMF30DDN      Move in assoc. ddname
         XR    R6,R6                    Clear
         ICM   R6,B'0011',SMF30BSZ      Get blocksize
         CVD   R6,EXPWKA                Convert to dec
         MVC   FYSTIM1+1(8),BIGMASK     Move in edit mask to line
         ED    FYSTIM1+1(8),EXPWKA+4    Edit the blksize
         BAL   R8,WRITEMSG              Write to JESYSMSG
NEXTREC  EQU   *
         XR    R15,R15                  Clear
         ICM   R15,B'0011',SMF30ELN     Get length of EXCP section
         AR    R3,R15                   Get the next excp section
         BCT   R7,EXCPLOOP              Loop it
DONE     EQU   *
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         CLC   ALLIOS,=F'0'             Any entry for total I/O ?
         BE    EXCPFIN                  No - end it
         CLC   ALLIOS(4),IOACCUM        Compare I/O fields
         BNH   EXCPFIN                  If allios not > ioaccum
         L     R15,ALLIOS               Load up all I/O count
         S     R15,IOACCUM              Subtract all DASD and TAPE I/O
         CVD   R15,EXPWKA               Convert to dec
         MVC   FYSTIM1+11(8),BIGMASK       Move in edit mask to line
         ED    FYSTIM1+11(8),EXPWKA+4      Edit the excp count
         MVC   FYSLAB1(8),SYSTEM        Star out the unit address
         BAL   R8,WRITEMSG              Write to JESYSMSG
EXCPFIN  EQU   *
         MVC   YSGAREA(80),BLANKS       Blank it out
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVI   FYSCOL2,C'-'             Move in dashes line
         BAL   R8,WRITEMSG              Write to JESYSMSG
         MVI   FYSCOL1,C'-'             Move in dashes line
         MVC   FYSCOL1+1(FYSLEN-1),FYSCOL1
         BAL   R8,WRITEMSG              Write to JESYSMSG
FREE     EQU   *
         FREEMAIN R,LV=WORKEND,A=(R13)
         B     RETURN00
*
*---------------------------------------------------------------------*
* End of Step Termination Code
*---------------------------------------------------------------------*
*
JOBTERM  EQU   *                        SMF type 30-5
*---------------------------------------------------------------------*
*  Process SMF30-5 records to produce Job Service totals msg
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30IOF              Get id section
         USING SMF30ID,R3               Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         GETMAIN R,LV=WORKEND           Get storage for workarea
         LR    R13,R1                   Store address in r13
         MVC   4(4,R13),=C'F1SA'        Set label in savearea
         USING WORKAREA,R13             Address workarea
         LA    R4,MSGAREA               Point to msgarea
         USING MSG,R4                   Address it
         XR    R15,R15                  Zero R15
         LA    R15,MSGTLEN(R15)         Get msg text length
         STH   R15,MSGWTOL              Store WTO msg length
         MVC   WTO1(L#WTO),WTOM         Move in WTO model
         MVC   MSGTEXT(MSGTLEN),BLANKS  Move in blank line
         MVC   MSGID(8),=CL8'HTRT06I'
         BAL   R8,WTOMSG                Issue WTO
         MVC   MSGTEXT(MSGTLEN),LABEL3  Move in blank line
         MVC   MSGJOBN(8),SMF30JBN      Move in job name
*
         TIME  BIN                      Get the current time
         LR    R7,R0                    Store current time
         B     MANYDAY2                 How many days ?
BADDAYS2 EQU   *
         XR    R7,R7                    Clear so that we ..
         B     ELAPCON2                 Force 00:00:00.00 (error)
*
MANYDAY2 EQU   *
         XC    DWORK,DWORK              Clear
         ST    R1,DWORK+4               Save date (0cyydddf)
         CLC   DWORK+5(1),SMF30STD+1    Same year ?
         BNE   BADDAYS2                 no - force error
         CLC   DWORK+6(2),SMF30STD+2    Same day ?
         BE    SAMEDAY2                 yes - no adjust
         SP    DWORK,SMF30STD           How many days
         BM    BADDAYS2                 error
         CVB   R6,DWORK                 convert to binary
         C     R6,=F'4'                 more than 4 days ?
         BNH   DAYADJS2                 no -
         MVC   MSGELAP(11),=CL11'>4 Days'
         B     ELAPDON2
DAYADJS2 EQU   *
         LR    R1,R6                    Copy number of days
         XR    R0,R0                    Clear
         M     R0,ONEDAY
         ALR   R7,R1                    Add on 24 hours
SAMEDAY2 EQU   *
         S     R7,SMF30SIT              Take away step init time
ELAPCON2 EQU   *
         LA    R1,MSGELAP               Point to elapsed section
         BAL   R8,TIMECONV              Format it
ELAPDON2 EQU   *
*---------------------------------------------------------------------*
* Capture service units from the performance section
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30POF              Get performance section
         USING SMF30PRF,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         LA    R7,0                     Zero R7
         LA    R15,MSGSERV              Point to serv
         L     R7,SMF30CSU              Load up serv units
         C     R7,MAXNUM                Check for maximum number
         BL    NORMJOB                  Normal job
         BCTR  R15,R0                   Minus one
         LA    R6,0                     Zero R6
         D     R6,=F'1000'              Divide by 1000
         MVI   MSGSERV+7,C'K'           Move in a K
NORMJOB  EQU   *
         CVD   R7,EXPWKA                Convert to dec
         MVC   0(8,R15),BIGMASK         Move in edit mask to line
         ED    0(8,R15),EXPWKA+4        Edit the service units
*---------------------------------------------------------------------*
* Capture I/O counts from the I/O section
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30UOF              Set to I/O  section
         USING SMF30URA,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         LA    R7,0                     Clear R7
         LA    R15,MSGEXCP              Point to I/O area
         L     R7,SMF30TEP              Load up r7 with # of excp recs
         ST    R7,ALLIOS                Store total I/O count
         C     R7,MAXNUM                Bigger than maximum
         BL    NORMJIO                  Normal I/O
         BCTR  R15,R0                   Minus one
         LA    R6,0                     Zero R6
         D     R6,=F'1000'              Divide by 1000
         MVI   MSGEXCP+5,C'K'           Move in a K
NORMJIO  EQU   *
         CVD   R7,EXPWKA                Convert to dec
         MVC   0(6,R15),GENMASK         Move in edit mask to line
         ED    0(6,R15),EXPWKA+5        Edit the I/O  count
*---------------------------------------------------------------------*
* Capture CPU times from the processor section
*---------------------------------------------------------------------*
         LR    R3,R2                    Set to SMF record start
         A     R3,SMF30COF              Set to processor section
         USING SMF30CAS,R3              Address it
         CR    R3,R2                    Any offset ?
         BE    RETURN00                 No - quit
         L     R7,SMF30CPT              Load up CPU time (TCB)
         LA    R1,MSGTCB                Point to WTO TCB time
         BAL   R8,TIMECONV              Format it
         L     R7,SMF30CPS              Load SRB time
         LA    R1,MSGSRB                Point to WTO SRB time
         BAL   R8,TIMECONV              Format it
         L     R7,SMF30CPT              Load up CPU time (TCB)
         A     R7,SMF30CPS              Add  SRB time
         LA    R1,MSGCPU                Point to total CPU
         BAL   R8,TIMECONV              Format it
         BAL   R8,WTOMSG                Issue WTO
         B     FREE                     Finished
*
*---------------------------------------------------------------------*
* End of Job Termination Code
*---------------------------------------------------------------------*
*
*---------------------------------------------------------------------*
* General Routines
*---------------------------------------------------------------------*
*
TIMECONV EQU   *
*---------------------------------------------------------------------*
* Routine to format SMF Time to hh:mm:ss.th
*
* Input Registers :
*   R1 points to output field
*   R6 is used as work
*   R7 contains the time to be converted
*---------------------------------------------------------------------*
         MVC   0(11,R1),CPUMASK         Move in '      00.00'
         LA    R6,0                     Clear reg for divide
         D     R6,=F'100'               Divide by 100 for 100ths sec
         CVD   R6,PWORK                 Convert remainder to dec
         UNPK  UWORK,PWORK              Unpack it
         OI    UWORK+3,X'F0'            Clear last byte
         MVC   9(2,R1),UWORK+2          Move to msg line
         LTR   R7,R7                    Any more ?
         BZ    CONVFIN                  No - get out
         LA    R6,0                     Clear reg for divide
         D     R6,=F'60'                Divide by 60 for secs
         CVD   R6,PWORK                 Convert to dec
         UNPK  UWORK,PWORK              Unpack it
         OI    UWORK+3,X'F0'            Clear last byte
         MVC   6(2,R1),UWORK+2          Move to message line
         LTR   R7,R7                    Any more ?
         BZ    CONVFIN                  No - get out
         MVI   5(R1),C':'               Stick in a colon
         LA    R6,0                     Clear reg for divide
         D     R6,=F'60'                Divide by 60 for mins
         CVD   R6,PWORK                 Convert to dec
         UNPK  UWORK,PWORK              Unpack it
         OI    UWORK+3,X'F0'            Clear last byte
         MVC   3(2,R1),UWORK+2          Move to message line
         LTR   R7,R7                    Any more ?
         BZ    CONVFIN                  No - get out
         MVI   2(R1),C':'               Stick in a colon
         CVD   R7,PWORK                 Convert hours to dec
         UNPK  UWORK,PWORK              Unpack it
         OI    UWORK+3,X'F0'            Clear last byte
         MVC   0(2,R1),UWORK+2          Move to message line
CONVFIN  EQU   *
         BR    R8
*
WRITEMSG EQU   *
*---------------------------------------------------------------------*
*  Write message line to JESYSMSG via the IEFYS routine
*---------------------------------------------------------------------*
         LA    R6,YSGAREA               Load address of msg text
         ST    R6,36(R12)               Move msg address to iefys
         XR    R15,R15                  Clear r15
         LA    R15,80                   Get msg text length
         STH   R15,42(,R12)             Move msg length to iefys
         L     R15,VIEFYS               Load addr of iefys
         BALR  R14,R15                  Execute iefys
         BR    R8                       Return
*
WTOMSG   EQU   *
*---------------------------------------------------------------------*
*  Write WTO message
*---------------------------------------------------------------------*
         WTO   TEXT=MSGAREA,            Issue WTO                      X
               MF=(E,WTO1)              From this parm list
         BR    R8                       Return
*
HEX2CHAR EQU   *
*---------------------------------------------------------------------*
* Convert a hex string to EBCDIC
* Registers on entry :
* R0 - Length of input hex bytes
* R1 - Input hex bytes
* R15- Output EBCDIC area
*
* R14 is used as a work register
*
*---------------------------------------------------------------------*
LEFTHALF EQU   *
         XR    R14,R14                  Clear
         ICM   R14,B'0001',0(R1)        Load up a byte (000000ab)
         SRL   R14,4                    Remove last 4 bits (0000000a)
LEFTNUM  EQU   *
         CH    R14,=H'9'                00000000 - 00000009 ?
         BH    LEFTLTTR                 higher - must be A-F
         AH    R14,=H'240'              xlate to F0-F9
         B     LEFTDONE
LEFTLTTR EQU   *
         AH    R14,=H'183'              xlate to C1-C6
LEFTDONE EQU   *
         STCM  R14,B'0001',0(R15)       Store in output field
         LA    R15,1(R15)               Point to next char
RGHTHALF EQU   *
         XR    R14,R14                  Clear
         ICM   R14,B'0001',0(R1)        Load up a byte (000000ab)
         SLL   R14,28                   Remove first 4 bits (b0000000)
         SRL   R14,28                   and reset           (0000000b)
RGHTNUM  EQU   *
         CH    R14,=H'9'                00000000 - 00000009 ?
         BH    RGHTLTTR                 higher - must be A-F
         AH    R14,=H'240'              xlate to F0-F9
         B     RGHTDONE
RGHTLTTR EQU   *
         AH    R14,=H'183'              xlate to C1-C6
RGHTDONE EQU   *
         STCM  R14,B'0001',0(R15)       Store in output area
         LA    R15,1(R15)               Point to next char
         LA    R1,1(R1)                 Point to next input byte
         BCT   R0,LEFTHALF              Loop for all bytes
         BR    R8                       return
*
*---------------------------------------------------------------------*
*  Constants.
*---------------------------------------------------------------------*
*
         LTORG
         DS    0D
WTOM     WTO   TEXT=(*-*),ROUTCDE=(16),MF=L
L#WTO    EQU   *-WTOM
         DS    0F
MAXNUM   DC    F'99999'                 max number of service units
ONEDAY   DC    A(24*60*60*100)          24 hous in 1/100 sec
VIEFYS   DC    V(IEFYS)                 address of iefys
VIO      DC    X'7FFF'                  VIO mask
VIOMSG   DC    C'VIO '                  VIO msg
GENMASK  DC    X'4020202021202020'      mask for normal numbers
BIGMASK  DC    X'4020202020202120'      mask for big numbers
UBMASK   DC    X'F021202020202020'      mask for user abend
CCMASK   DC    X'4020202020212020'      mask for return codes
CPUMASK  DC    CL11'      00.00'        CPU time mask
SYSTEM   DC    CL8'*System*'
FLUSH    DC    CL5'FLUSH'               Job Flushed msg
PGMLABL  DC    CL7'Program'
*---------------------------------------------------------------------*
* Change the company name below ..                                    *
*---------------------------------------------------------------------*
COMPANY  DC    C'Step Termination Statistics'
LCOMPANY EQU   *-COMPANY                Length of company name
*
BLANKS   DS    0C                       header label 0
         DC    CL1' '                   dash '-'
         DC    CL(MSGTLEN-1)' '         blanks
LABEL1   DS    0C                       header label 1
         DC    CL8'HTRT01I'             Message ID
         DC    CL8'       '             job name
         DC    CL1' '
         DC    CL8'        '            stepname
         DC    CL1' '
         DC    CL8'        '            procedure step name
         DC    CL1' '
         DC    CL5'     '               return/abend code
         DC    CL1' '
         DC    CL6'      '              excp count
         DC    CL1' '
         DC    CL11'CPU (Total)'        total CPU time
         DC    CL2' '
         DC    CL11'Elapsed   '         elapsed time
         DC    CL2' '
         DC    CL11'CPU (TCB) '         TCB CPU time
         DC    CL2' '
         DC    CL11'CPU (SRB) '         SRB CPU time
         DC    CL2' '
         DC    CL8' Service'            service units
*
LABEL2   DS    0C                       header label 2
         DC    CL8'HTRT02I'             Message ID
         DC    CL8'Jobname'             job name
         DC    CL1' '
         DC    CL8'Stepname'            stepname
         DC    CL1' '
         DC    CL8'ProcStep'            procedure step name
         DC    CL1' '
         DC    CL5'   RC'               return/abend code
         DC    CL1' '
         DC    CL6'   I/O'              excp count
         DC    CL1' '
         DC    CL11'hh:mm:ss.th'        total CPU time
         DC    CL2' '
         DC    CL11'hh:mm:ss.th'        elapsed time
         DC    CL2' '
         DC    CL11'hh:mm:ss.th'        TCB CPU time
         DC    CL2' '
         DC    CL11'hh:mm:ss.th'        SRB CPU time
         DC    CL2' '
         DC    CL8'   Units'            service units
*
LABEL3   DS    0C                       header label 3
         DC    CL8'HTRT04I'             Message ID
         DC    CL8'       '             job name
         DC    CL1' '
         DC    CL18'Job Service Totals'
         DC    CL5'     '
         DC    CL1' '
         DC    CL6'      '              excp count
         DC    CL1' '
         DC    CL11'          '         total CPU time
         DC    CL2' '
         DC    CL11'          '         elapsed time
         DC    CL2' '
         DC    CL11'          '         TCB CPU time
         DC    CL2' '
         DC    CL11'          '         SRB CPU time
         DC    CL2' '
         DC    CL8'     '               service units
*
*---------------------------------------------------------------------*
*  DSECTs
*---------------------------------------------------------------------*
*
WORKAREA DSECT
SAVEAREA DS    9D                       savearea
PGMNAME  DS    CL8                      saved program name
         DS    0D
DWORK    DS    D                        packed work area
PWORK    DS    D                        packed work area
UWORK    DS    F                        unpacked work area
CWORK    DS    CL8                      unpacked work area
EXPWKA   DS    0D                       excp work area
EXPWKA1  DS    D
ALLIOS   DS    F
IOACCUM  DS    F                        Accumulated I/O count
YSGAREA  DS    CL80                     Step summary messages
WTO1     DS    CL(L#WTO)                WTO area
MSGAREA  DS    CL(MSGLEN)               area for WTO messages
         DS    0D
SAVEPGM  DS    CL8
SAVESTEP DS    CL8
SAVEPROC DS    CL8
SAVERC   DS    CL8
SAVEIO   DS    CL8
SAVESERV DS    CL8
SAVETCB  DS    CL11
SAVESRB  DS    CL11
SAVETOT  DS    CL11
SAVEELA  DS    CL11
         DS    0D
WORKEND  EQU   *-SAVEAREA               length of workarea
*
MSG      DSECT
MSGWTOL  DS    H                        length of message text
MSGTEXT  DS    0C                       start of text
MSGID    DS    CL8
MSGJOBN  DS    CL8                      job name
         DS    CL1
MSGSTEP  DS    CL8                      stepname
         DS    CL1
MSGPROC  DS    CL8                      procedure step name
         DS    CL1
MSGRC    DS    CL5                      return/abend code
         DS    CL1
MSGEXCP  DS    CL6                      excp count
         DS    CL1
MSGCPU   DS    CL11                     total CPU time
         DS    CL2
MSGELAP  DS    CL11                     elapsed time
         DS    CL2
MSGTCB   DS    CL11                     TCB CPU time
         DS    CL2
MSGSRB   DS    CL11                     SRB CPU time
         DS    CL2
MSGSERV  DS    CL8                      service units
MSGTLEN  EQU   *-MSGTEXT                length of message text
MSGLEN   EQU   *-MSG                    length of entire dsect
MSGPGM   EQU   MSGJOBN                  org back for I/O msgs
MSGDDN   EQU   MSGJOBN
MSGUNIT  EQU   MSGSTEP
MSGBLKS  EQU   MSGPROC
MSGIOCNT EQU   MSGRC+4
*
FYS      DSECT
FYSMSGID DS    CL8
FYSCOL1  DS    X
         DS    X
FYSLAB1  DS    CL16                     label number 1
FYSTIM1  DS    CL3
FYSFLD1  DS    CL12                     Field number 1
         DS    XL6
FYSLAB2  DS    CL16                     label number 1
FYSTIM2  DS    CL3
FYSFLD2  DS    CL12                     Field number 1
         DS    X
FYSCOL2  DS    X
FYSLEN   EQU   *-FYSCOL1
*
PARMLIST DSECT
CEPA     DS    A                        common exit parameter area
JOBNAME  DS    A                        jobname
PROGNAME DS    A                        programmer name
CPUTME   DS    A                        CPU time
ACCTINFO DS    A                        account information
STEPCPU  DS    A                        CPU time for step
EXECACT  DS    A
CANBIT   DS    A                        cancel bit
TERMSTAT DS    A
SMFRDW   DS    A                        SMF record decriptor
JOBPTME  DS    A                        job processor time
STEPPTME DS    A                        step processor time
SUBSYS   DS    A                        sub-system (eg tso,jes2..)
*---------------------------------------------------------------------*
*  System mapping macros
*---------------------------------------------------------------------*
         IFASMFR 30                     SMF type 30 record
K1       EQU   01
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
