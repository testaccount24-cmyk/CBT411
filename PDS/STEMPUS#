)F Function STEMPUSH

     This program provides an external REXX function to place REXX
     stem variables onto a stack that can be passed to another REXX
     exec running within the same address space.

     The 'stack' is in fact a dataspace whose STOKEN is passed back in
     EBCDIC form to the REXX result value. This 'token' can then be
     used in any other REXX as an argument to the STEMPULL function to
     retrieve the contents of the dataspace.

)X Syntax

     token = STEMPUSH(maxblk,'stem1.',,'stemn.')

)O Keywords

))TOKEN

               token  -  16 byte token that identifies
                         the 'stack' that the stems have
                         been 'pushed' onto. If this
                         is set to '0', then the
                         function has failed.

))MAXBLK

               maxblk -  Optional keyword that specifies
                         the size of the 'stack'. The
                         format is 'nnnnn'
                         where 'nnnnn' is the size of
                         'stack' in 4K blocks.
                         The minimum value is 10.
                         The maximum value is 99999.
                         The default value is 4000.

))STEMN

               stemn  -  The stem name(s) that are to be
                         pushed onto the 'stack'. The
                         variable names MUST be enclosed
                         in quotes and the last char in
                         each name MUST be a dot.

)Examples

     /* REXX - EXEC1 */
     fname.0 = 2
     fname.1 = 'Fred'
     fname.2 = 'Barney'
     sname.0 = 2
     sname.1 = 'Fred'
     sname.2 = 'Barney'
     token = STEMPUSH('fname.','sname.')
     if token <> 0 then call EXEC2 token
     exit

     /* REXX - EXEC2 */
     arg token
     status = stempull(token)
     if status = 0 then do
       say fname.1 sname.1
       say fname.2 sname.2
     end
     exit

)Author

    Rob Scott
    Scott Enterprise Consultancy Ltd
